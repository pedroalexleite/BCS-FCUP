-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Parser.y
-----------------------------------------------------------------------------

state 77 contains 12 shift/reduce conflicts.
state 78 contains 11 shift/reduce conflicts.
state 84 contains 11 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> Program                           (0)
	Program -> let Decl_list in Expr_seq               (1)
	Decl_list -> Decl                                  (2)
	Decl_list -> Decl_list Decl                        (3)
	Expr_seq -> Expr                                   (4)
	Expr_seq -> Expr_seq ';' Expr                      (5)
	Type_id -> int                                     (6)
	Var_decl -> var Var ':=' Expr                      (7)
	Var_decl_list -> Var_decl                          (8)
	Var_decl_list -> Var_decl_list Var_decl            (9)
	Type_fields ->                                     (10)
	Type_fields -> Type_field                          (11)
	Type_fields -> Type_fields ',' Type_field          (12)
	Type_field -> Var ':' Type_id                      (13)
	Var -> id                                          (14)
	Decl -> Var_decl                                   (15)
	Decl -> function Var '(' Type_fields ')' '=' Expr   (16)
	Decl -> function Var '(' Type_fields ')' ':' Type_id '=' Expr   (17)
	Expr -> num                                        (18)
	Expr -> Var                                        (19)
	Expr -> Var ':=' Expr                              (20)
	Expr -> Expr '<' Expr                              (21)
	Expr -> Expr '<=' Expr                             (22)
	Expr -> Expr '>' Expr                              (23)
	Expr -> Expr '>=' Expr                             (24)
	Expr -> Expr '=' Expr                              (25)
	Expr -> Expr '<>' Expr                             (26)
	Expr -> Expr '-' Expr                              (27)
	Expr -> Expr '+' Expr                              (28)
	Expr -> Expr '*' Expr                              (29)
	Expr -> Expr '/' Expr                              (30)
	Expr -> Expr '%' Expr                              (31)
	Expr -> if Expr then Expr                          (32)
	Expr -> if Expr then Expr else Expr                (33)
	Expr -> while Expr do Expr                         (34)
	Expr -> let Var_decl_list in Expr_seq end          (35)
	Expr -> printi '(' Expr ')'                        (36)
	Expr -> scani '(' ')'                              (37)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	int            { TOK_INT }
	id             { TOK_ID $$ }
	num            { TOK_NUM $$ }
	while          { TOK_WHILE }
	do             { TOK_DO }
	if             { TOK_IF }
	then           { TOK_THEN }
	else           { TOK_ELSE }
	scani          { TOK_SCANI }
	printi         { TOK_PRINTI }
	var            { TOK_VAR }
	let            { TOK_LET }
	in             { TOK_IN }
	end            { TOK_END }
	function       { TOK_FUNCTION }
	';'            { TOK_SEMICOLON }
	'('            { TOK_LPAREN }
	')'            { TOK_RPAREN }
	','            { TOK_COMMA }
	'>'            { TOK_BIGGER }
	'>='           { TOK_BIGGEREQUAL }
	'<'            { TOK_SMALLER }
	'<='           { TOK_SMALLEREQUAL }
	'<>'           { TOK_DIFF }
	'='            { TOK_EQUAL }
	'+'            { TOK_PLUS }
	'-'            { TOK_MINUS }
	'*'            { TOK_MULTI }
	'/'            { TOK_DIV }
	'%'            { TOK_PERCENT }
	':='           { TOK_DEFINE }
	':'            { TOK_COLON }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	Program         rule  1
	Decl_list       rules 2, 3
	Expr_seq        rules 4, 5
	Type_id         rule  6
	Var_decl        rule  7
	Var_decl_list   rules 8, 9
	Type_fields     rules 10, 11, 12
	Type_field      rule  13
	Var             rule  14
	Decl            rules 15, 16, 17
	Expr            rules 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parser -> . Program                          (rule 0)

	let            shift, and enter state 2

	Program        goto state 3

State 1

	Program -> . let Decl_list in Expr_seq              (rule 1)

	let            shift, and enter state 2


State 2

	Program -> let . Decl_list in Expr_seq              (rule 1)

	var            shift, and enter state 7
	function       shift, and enter state 8

	Decl_list      goto state 4
	Var_decl       goto state 5
	Decl           goto state 6

State 3

	%start_parser -> Program .                          (rule 0)

	%eof           accept


State 4

	Program -> let Decl_list . in Expr_seq              (rule 1)
	Decl_list -> Decl_list . Decl                       (rule 3)

	var            shift, and enter state 7
	in             shift, and enter state 13
	function       shift, and enter state 8

	Var_decl       goto state 5
	Decl           goto state 12

State 5

	Decl -> Var_decl .                                  (rule 15)

	var            reduce using rule 15
	in             reduce using rule 15
	function       reduce using rule 15


State 6

	Decl_list -> Decl .                                 (rule 2)

	var            reduce using rule 2
	in             reduce using rule 2
	function       reduce using rule 2


State 7

	Var_decl -> var . Var ':=' Expr                     (rule 7)

	id             shift, and enter state 10

	Var            goto state 11

State 8

	Decl -> function . Var '(' Type_fields ')' '=' Expr    (rule 16)
	Decl -> function . Var '(' Type_fields ')' ':' Type_id '=' Expr    (rule 17)

	id             shift, and enter state 10

	Var            goto state 9

State 9

	Decl -> function Var . '(' Type_fields ')' '=' Expr    (rule 16)
	Decl -> function Var . '(' Type_fields ')' ':' Type_id '=' Expr    (rule 17)

	'('            shift, and enter state 24


State 10

	Var -> id .                                         (rule 14)

	do             reduce using rule 14
	then           reduce using rule 14
	else           reduce using rule 14
	var            reduce using rule 14
	in             reduce using rule 14
	end            reduce using rule 14
	function       reduce using rule 14
	';'            reduce using rule 14
	'('            reduce using rule 14
	')'            reduce using rule 14
	'>'            reduce using rule 14
	'>='           reduce using rule 14
	'<'            reduce using rule 14
	'<='           reduce using rule 14
	'<>'           reduce using rule 14
	'='            reduce using rule 14
	'+'            reduce using rule 14
	'-'            reduce using rule 14
	'*'            reduce using rule 14
	'/'            reduce using rule 14
	'%'            reduce using rule 14
	':='           reduce using rule 14
	':'            reduce using rule 14
	%eof           reduce using rule 14


State 11

	Var_decl -> var Var . ':=' Expr                     (rule 7)

	':='           shift, and enter state 23


State 12

	Decl_list -> Decl_list Decl .                       (rule 3)

	var            reduce using rule 3
	in             reduce using rule 3
	function       reduce using rule 3


State 13

	Program -> let Decl_list in . Expr_seq              (rule 1)

	id             shift, and enter state 10
	num            shift, and enter state 17
	while          shift, and enter state 18
	if             shift, and enter state 19
	scani          shift, and enter state 20
	printi         shift, and enter state 21
	let            shift, and enter state 22

	Expr_seq       goto state 14
	Var            goto state 15
	Expr           goto state 16

State 14

	Program -> let Decl_list in Expr_seq .              (rule 1)
	Expr_seq -> Expr_seq . ';' Expr                     (rule 5)

	';'            shift, and enter state 47
	%eof           reduce using rule 1


State 15

	Expr -> Var .                                       (rule 19)
	Expr -> Var . ':=' Expr                             (rule 20)

	do             reduce using rule 19
	then           reduce using rule 19
	else           reduce using rule 19
	var            reduce using rule 19
	in             reduce using rule 19
	end            reduce using rule 19
	function       reduce using rule 19
	';'            reduce using rule 19
	')'            reduce using rule 19
	'>'            reduce using rule 19
	'>='           reduce using rule 19
	'<'            reduce using rule 19
	'<='           reduce using rule 19
	'<>'           reduce using rule 19
	'='            reduce using rule 19
	'+'            reduce using rule 19
	'-'            reduce using rule 19
	'*'            reduce using rule 19
	'/'            reduce using rule 19
	'%'            reduce using rule 19
	':='           shift, and enter state 46
	%eof           reduce using rule 19


State 16

	Expr_seq -> Expr .                                  (rule 4)
	Expr -> Expr . '<' Expr                             (rule 21)
	Expr -> Expr . '<=' Expr                            (rule 22)
	Expr -> Expr . '>' Expr                             (rule 23)
	Expr -> Expr . '>=' Expr                            (rule 24)
	Expr -> Expr . '=' Expr                             (rule 25)
	Expr -> Expr . '<>' Expr                            (rule 26)
	Expr -> Expr . '-' Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '*' Expr                             (rule 29)
	Expr -> Expr . '/' Expr                             (rule 30)
	Expr -> Expr . '%' Expr                             (rule 31)

	end            reduce using rule 4
	';'            reduce using rule 4
	'>'            shift, and enter state 35
	'>='           shift, and enter state 36
	'<'            shift, and enter state 37
	'<='           shift, and enter state 38
	'<>'           shift, and enter state 39
	'='            shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	%eof           reduce using rule 4


State 17

	Expr -> num .                                       (rule 18)

	do             reduce using rule 18
	then           reduce using rule 18
	else           reduce using rule 18
	var            reduce using rule 18
	in             reduce using rule 18
	end            reduce using rule 18
	function       reduce using rule 18
	';'            reduce using rule 18
	')'            reduce using rule 18
	'>'            reduce using rule 18
	'>='           reduce using rule 18
	'<'            reduce using rule 18
	'<='           reduce using rule 18
	'<>'           reduce using rule 18
	'='            reduce using rule 18
	'+'            reduce using rule 18
	'-'            reduce using rule 18
	'*'            reduce using rule 18
	'/'            reduce using rule 18
	'%'            reduce using rule 18
	%eof           reduce using rule 18


State 18

	Expr -> while . Expr do Expr                        (rule 34)

	id             shift, and enter state 10
	num            shift, and enter state 17
	while          shift, and enter state 18
	if             shift, and enter state 19
	scani          shift, and enter state 20
	printi         shift, and enter state 21
	let            shift, and enter state 22

	Var            goto state 15
	Expr           goto state 34

State 19

	Expr -> if . Expr then Expr                         (rule 32)
	Expr -> if . Expr then Expr else Expr               (rule 33)

	id             shift, and enter state 10
	num            shift, and enter state 17
	while          shift, and enter state 18
	if             shift, and enter state 19
	scani          shift, and enter state 20
	printi         shift, and enter state 21
	let            shift, and enter state 22

	Var            goto state 15
	Expr           goto state 33

State 20

	Expr -> scani . '(' ')'                             (rule 37)

	'('            shift, and enter state 32


State 21

	Expr -> printi . '(' Expr ')'                       (rule 36)

	'('            shift, and enter state 31


State 22

	Expr -> let . Var_decl_list in Expr_seq end         (rule 35)

	var            shift, and enter state 7

	Var_decl       goto state 29
	Var_decl_list  goto state 30

State 23

	Var_decl -> var Var ':=' . Expr                     (rule 7)

	id             shift, and enter state 10
	num            shift, and enter state 17
	while          shift, and enter state 18
	if             shift, and enter state 19
	scani          shift, and enter state 20
	printi         shift, and enter state 21
	let            shift, and enter state 22

	Var            goto state 15
	Expr           goto state 28

State 24

	Decl -> function Var '(' . Type_fields ')' '=' Expr    (rule 16)
	Decl -> function Var '(' . Type_fields ')' ':' Type_id '=' Expr    (rule 17)

	id             shift, and enter state 10
	')'            reduce using rule 10
	','            reduce using rule 10

	Type_fields    goto state 25
	Type_field     goto state 26
	Var            goto state 27

State 25

	Type_fields -> Type_fields . ',' Type_field         (rule 12)
	Decl -> function Var '(' Type_fields . ')' '=' Expr    (rule 16)
	Decl -> function Var '(' Type_fields . ')' ':' Type_id '=' Expr    (rule 17)

	')'            shift, and enter state 68
	','            shift, and enter state 69


State 26

	Type_fields -> Type_field .                         (rule 11)

	')'            reduce using rule 11
	','            reduce using rule 11


State 27

	Type_field -> Var . ':' Type_id                     (rule 13)

	':'            shift, and enter state 67


State 28

	Var_decl -> var Var ':=' Expr .                     (rule 7)
	Expr -> Expr . '<' Expr                             (rule 21)
	Expr -> Expr . '<=' Expr                            (rule 22)
	Expr -> Expr . '>' Expr                             (rule 23)
	Expr -> Expr . '>=' Expr                            (rule 24)
	Expr -> Expr . '=' Expr                             (rule 25)
	Expr -> Expr . '<>' Expr                            (rule 26)
	Expr -> Expr . '-' Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '*' Expr                             (rule 29)
	Expr -> Expr . '/' Expr                             (rule 30)
	Expr -> Expr . '%' Expr                             (rule 31)

	var            reduce using rule 7
	in             reduce using rule 7
	function       reduce using rule 7
	'>'            shift, and enter state 35
	'>='           shift, and enter state 36
	'<'            shift, and enter state 37
	'<='           shift, and enter state 38
	'<>'           shift, and enter state 39
	'='            shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45


State 29

	Var_decl_list -> Var_decl .                         (rule 8)

	var            reduce using rule 8
	in             reduce using rule 8


State 30

	Var_decl_list -> Var_decl_list . Var_decl           (rule 9)
	Expr -> let Var_decl_list . in Expr_seq end         (rule 35)

	var            shift, and enter state 7
	in             shift, and enter state 66

	Var_decl       goto state 65

State 31

	Expr -> printi '(' . Expr ')'                       (rule 36)

	id             shift, and enter state 10
	num            shift, and enter state 17
	while          shift, and enter state 18
	if             shift, and enter state 19
	scani          shift, and enter state 20
	printi         shift, and enter state 21
	let            shift, and enter state 22

	Var            goto state 15
	Expr           goto state 64

State 32

	Expr -> scani '(' . ')'                             (rule 37)

	')'            shift, and enter state 63


State 33

	Expr -> Expr . '<' Expr                             (rule 21)
	Expr -> Expr . '<=' Expr                            (rule 22)
	Expr -> Expr . '>' Expr                             (rule 23)
	Expr -> Expr . '>=' Expr                            (rule 24)
	Expr -> Expr . '=' Expr                             (rule 25)
	Expr -> Expr . '<>' Expr                            (rule 26)
	Expr -> Expr . '-' Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '*' Expr                             (rule 29)
	Expr -> Expr . '/' Expr                             (rule 30)
	Expr -> Expr . '%' Expr                             (rule 31)
	Expr -> if Expr . then Expr                         (rule 32)
	Expr -> if Expr . then Expr else Expr               (rule 33)

	then           shift, and enter state 62
	'>'            shift, and enter state 35
	'>='           shift, and enter state 36
	'<'            shift, and enter state 37
	'<='           shift, and enter state 38
	'<>'           shift, and enter state 39
	'='            shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45


State 34

	Expr -> Expr . '<' Expr                             (rule 21)
	Expr -> Expr . '<=' Expr                            (rule 22)
	Expr -> Expr . '>' Expr                             (rule 23)
	Expr -> Expr . '>=' Expr                            (rule 24)
	Expr -> Expr . '=' Expr                             (rule 25)
	Expr -> Expr . '<>' Expr                            (rule 26)
	Expr -> Expr . '-' Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '*' Expr                             (rule 29)
	Expr -> Expr . '/' Expr                             (rule 30)
	Expr -> Expr . '%' Expr                             (rule 31)
	Expr -> while Expr . do Expr                        (rule 34)

	do             shift, and enter state 61
	'>'            shift, and enter state 35
	'>='           shift, and enter state 36
	'<'            shift, and enter state 37
	'<='           shift, and enter state 38
	'<>'           shift, and enter state 39
	'='            shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45


State 35

	Expr -> Expr '>' . Expr                             (rule 23)

	id             shift, and enter state 10
	num            shift, and enter state 17
	while          shift, and enter state 18
	if             shift, and enter state 19
	scani          shift, and enter state 20
	printi         shift, and enter state 21
	let            shift, and enter state 22

	Var            goto state 15
	Expr           goto state 60

State 36

	Expr -> Expr '>=' . Expr                            (rule 24)

	id             shift, and enter state 10
	num            shift, and enter state 17
	while          shift, and enter state 18
	if             shift, and enter state 19
	scani          shift, and enter state 20
	printi         shift, and enter state 21
	let            shift, and enter state 22

	Var            goto state 15
	Expr           goto state 59

State 37

	Expr -> Expr '<' . Expr                             (rule 21)

	id             shift, and enter state 10
	num            shift, and enter state 17
	while          shift, and enter state 18
	if             shift, and enter state 19
	scani          shift, and enter state 20
	printi         shift, and enter state 21
	let            shift, and enter state 22

	Var            goto state 15
	Expr           goto state 58

State 38

	Expr -> Expr '<=' . Expr                            (rule 22)

	id             shift, and enter state 10
	num            shift, and enter state 17
	while          shift, and enter state 18
	if             shift, and enter state 19
	scani          shift, and enter state 20
	printi         shift, and enter state 21
	let            shift, and enter state 22

	Var            goto state 15
	Expr           goto state 57

State 39

	Expr -> Expr '<>' . Expr                            (rule 26)

	id             shift, and enter state 10
	num            shift, and enter state 17
	while          shift, and enter state 18
	if             shift, and enter state 19
	scani          shift, and enter state 20
	printi         shift, and enter state 21
	let            shift, and enter state 22

	Var            goto state 15
	Expr           goto state 56

State 40

	Expr -> Expr '=' . Expr                             (rule 25)

	id             shift, and enter state 10
	num            shift, and enter state 17
	while          shift, and enter state 18
	if             shift, and enter state 19
	scani          shift, and enter state 20
	printi         shift, and enter state 21
	let            shift, and enter state 22

	Var            goto state 15
	Expr           goto state 55

State 41

	Expr -> Expr '+' . Expr                             (rule 28)

	id             shift, and enter state 10
	num            shift, and enter state 17
	while          shift, and enter state 18
	if             shift, and enter state 19
	scani          shift, and enter state 20
	printi         shift, and enter state 21
	let            shift, and enter state 22

	Var            goto state 15
	Expr           goto state 54

State 42

	Expr -> Expr '-' . Expr                             (rule 27)

	id             shift, and enter state 10
	num            shift, and enter state 17
	while          shift, and enter state 18
	if             shift, and enter state 19
	scani          shift, and enter state 20
	printi         shift, and enter state 21
	let            shift, and enter state 22

	Var            goto state 15
	Expr           goto state 53

State 43

	Expr -> Expr '*' . Expr                             (rule 29)

	id             shift, and enter state 10
	num            shift, and enter state 17
	while          shift, and enter state 18
	if             shift, and enter state 19
	scani          shift, and enter state 20
	printi         shift, and enter state 21
	let            shift, and enter state 22

	Var            goto state 15
	Expr           goto state 52

State 44

	Expr -> Expr '/' . Expr                             (rule 30)

	id             shift, and enter state 10
	num            shift, and enter state 17
	while          shift, and enter state 18
	if             shift, and enter state 19
	scani          shift, and enter state 20
	printi         shift, and enter state 21
	let            shift, and enter state 22

	Var            goto state 15
	Expr           goto state 51

State 45

	Expr -> Expr '%' . Expr                             (rule 31)

	id             shift, and enter state 10
	num            shift, and enter state 17
	while          shift, and enter state 18
	if             shift, and enter state 19
	scani          shift, and enter state 20
	printi         shift, and enter state 21
	let            shift, and enter state 22

	Var            goto state 15
	Expr           goto state 50

State 46

	Expr -> Var ':=' . Expr                             (rule 20)

	id             shift, and enter state 10
	num            shift, and enter state 17
	while          shift, and enter state 18
	if             shift, and enter state 19
	scani          shift, and enter state 20
	printi         shift, and enter state 21
	let            shift, and enter state 22

	Var            goto state 15
	Expr           goto state 49

State 47

	Expr_seq -> Expr_seq ';' . Expr                     (rule 5)

	id             shift, and enter state 10
	num            shift, and enter state 17
	while          shift, and enter state 18
	if             shift, and enter state 19
	scani          shift, and enter state 20
	printi         shift, and enter state 21
	let            shift, and enter state 22

	Var            goto state 15
	Expr           goto state 48

State 48

	Expr_seq -> Expr_seq ';' Expr .                     (rule 5)
	Expr -> Expr . '<' Expr                             (rule 21)
	Expr -> Expr . '<=' Expr                            (rule 22)
	Expr -> Expr . '>' Expr                             (rule 23)
	Expr -> Expr . '>=' Expr                            (rule 24)
	Expr -> Expr . '=' Expr                             (rule 25)
	Expr -> Expr . '<>' Expr                            (rule 26)
	Expr -> Expr . '-' Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '*' Expr                             (rule 29)
	Expr -> Expr . '/' Expr                             (rule 30)
	Expr -> Expr . '%' Expr                             (rule 31)

	end            reduce using rule 5
	';'            reduce using rule 5
	'>'            shift, and enter state 35
	'>='           shift, and enter state 36
	'<'            shift, and enter state 37
	'<='           shift, and enter state 38
	'<>'           shift, and enter state 39
	'='            shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	%eof           reduce using rule 5


State 49

	Expr -> Var ':=' Expr .                             (rule 20)
	Expr -> Expr . '<' Expr                             (rule 21)
	Expr -> Expr . '<=' Expr                            (rule 22)
	Expr -> Expr . '>' Expr                             (rule 23)
	Expr -> Expr . '>=' Expr                            (rule 24)
	Expr -> Expr . '=' Expr                             (rule 25)
	Expr -> Expr . '<>' Expr                            (rule 26)
	Expr -> Expr . '-' Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '*' Expr                             (rule 29)
	Expr -> Expr . '/' Expr                             (rule 30)
	Expr -> Expr . '%' Expr                             (rule 31)

	do             reduce using rule 20
	then           reduce using rule 20
	else           reduce using rule 20
	var            reduce using rule 20
	in             reduce using rule 20
	end            reduce using rule 20
	function       reduce using rule 20
	';'            reduce using rule 20
	')'            reduce using rule 20
	'>'            shift, and enter state 35
	'>='           shift, and enter state 36
	'<'            shift, and enter state 37
	'<='           shift, and enter state 38
	'<>'           shift, and enter state 39
	'='            shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	%eof           reduce using rule 20


State 50

	Expr -> Expr . '<' Expr                             (rule 21)
	Expr -> Expr . '<=' Expr                            (rule 22)
	Expr -> Expr . '>' Expr                             (rule 23)
	Expr -> Expr . '>=' Expr                            (rule 24)
	Expr -> Expr . '=' Expr                             (rule 25)
	Expr -> Expr . '<>' Expr                            (rule 26)
	Expr -> Expr . '-' Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '*' Expr                             (rule 29)
	Expr -> Expr . '/' Expr                             (rule 30)
	Expr -> Expr . '%' Expr                             (rule 31)
	Expr -> Expr '%' Expr .                             (rule 31)

	do             reduce using rule 31
	then           reduce using rule 31
	else           reduce using rule 31
	var            reduce using rule 31
	in             reduce using rule 31
	end            reduce using rule 31
	function       reduce using rule 31
	';'            reduce using rule 31
	')'            reduce using rule 31
	'>'            reduce using rule 31
	'>='           reduce using rule 31
	'<'            reduce using rule 31
	'<='           reduce using rule 31
	'<>'           reduce using rule 31
	'='            reduce using rule 31
	'+'            reduce using rule 31
	'-'            reduce using rule 31
	'*'            reduce using rule 31
	'/'            reduce using rule 31
	'%'            reduce using rule 31
	%eof           reduce using rule 31


State 51

	Expr -> Expr . '<' Expr                             (rule 21)
	Expr -> Expr . '<=' Expr                            (rule 22)
	Expr -> Expr . '>' Expr                             (rule 23)
	Expr -> Expr . '>=' Expr                            (rule 24)
	Expr -> Expr . '=' Expr                             (rule 25)
	Expr -> Expr . '<>' Expr                            (rule 26)
	Expr -> Expr . '-' Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '*' Expr                             (rule 29)
	Expr -> Expr . '/' Expr                             (rule 30)
	Expr -> Expr '/' Expr .                             (rule 30)
	Expr -> Expr . '%' Expr                             (rule 31)

	do             reduce using rule 30
	then           reduce using rule 30
	else           reduce using rule 30
	var            reduce using rule 30
	in             reduce using rule 30
	end            reduce using rule 30
	function       reduce using rule 30
	';'            reduce using rule 30
	')'            reduce using rule 30
	'>'            reduce using rule 30
	'>='           reduce using rule 30
	'<'            reduce using rule 30
	'<='           reduce using rule 30
	'<>'           reduce using rule 30
	'='            reduce using rule 30
	'+'            reduce using rule 30
	'-'            reduce using rule 30
	'*'            reduce using rule 30
	'/'            reduce using rule 30
	'%'            reduce using rule 30
	%eof           reduce using rule 30


State 52

	Expr -> Expr . '<' Expr                             (rule 21)
	Expr -> Expr . '<=' Expr                            (rule 22)
	Expr -> Expr . '>' Expr                             (rule 23)
	Expr -> Expr . '>=' Expr                            (rule 24)
	Expr -> Expr . '=' Expr                             (rule 25)
	Expr -> Expr . '<>' Expr                            (rule 26)
	Expr -> Expr . '-' Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '*' Expr                             (rule 29)
	Expr -> Expr '*' Expr .                             (rule 29)
	Expr -> Expr . '/' Expr                             (rule 30)
	Expr -> Expr . '%' Expr                             (rule 31)

	do             reduce using rule 29
	then           reduce using rule 29
	else           reduce using rule 29
	var            reduce using rule 29
	in             reduce using rule 29
	end            reduce using rule 29
	function       reduce using rule 29
	';'            reduce using rule 29
	')'            reduce using rule 29
	'>'            reduce using rule 29
	'>='           reduce using rule 29
	'<'            reduce using rule 29
	'<='           reduce using rule 29
	'<>'           reduce using rule 29
	'='            reduce using rule 29
	'+'            reduce using rule 29
	'-'            reduce using rule 29
	'*'            reduce using rule 29
	'/'            reduce using rule 29
	'%'            reduce using rule 29
	%eof           reduce using rule 29


State 53

	Expr -> Expr . '<' Expr                             (rule 21)
	Expr -> Expr . '<=' Expr                            (rule 22)
	Expr -> Expr . '>' Expr                             (rule 23)
	Expr -> Expr . '>=' Expr                            (rule 24)
	Expr -> Expr . '=' Expr                             (rule 25)
	Expr -> Expr . '<>' Expr                            (rule 26)
	Expr -> Expr . '-' Expr                             (rule 27)
	Expr -> Expr '-' Expr .                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '*' Expr                             (rule 29)
	Expr -> Expr . '/' Expr                             (rule 30)
	Expr -> Expr . '%' Expr                             (rule 31)

	do             reduce using rule 27
	then           reduce using rule 27
	else           reduce using rule 27
	var            reduce using rule 27
	in             reduce using rule 27
	end            reduce using rule 27
	function       reduce using rule 27
	';'            reduce using rule 27
	')'            reduce using rule 27
	'>'            reduce using rule 27
	'>='           reduce using rule 27
	'<'            reduce using rule 27
	'<='           reduce using rule 27
	'<>'           reduce using rule 27
	'='            reduce using rule 27
	'+'            reduce using rule 27
	'-'            reduce using rule 27
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	%eof           reduce using rule 27


State 54

	Expr -> Expr . '<' Expr                             (rule 21)
	Expr -> Expr . '<=' Expr                            (rule 22)
	Expr -> Expr . '>' Expr                             (rule 23)
	Expr -> Expr . '>=' Expr                            (rule 24)
	Expr -> Expr . '=' Expr                             (rule 25)
	Expr -> Expr . '<>' Expr                            (rule 26)
	Expr -> Expr . '-' Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr '+' Expr .                             (rule 28)
	Expr -> Expr . '*' Expr                             (rule 29)
	Expr -> Expr . '/' Expr                             (rule 30)
	Expr -> Expr . '%' Expr                             (rule 31)

	do             reduce using rule 28
	then           reduce using rule 28
	else           reduce using rule 28
	var            reduce using rule 28
	in             reduce using rule 28
	end            reduce using rule 28
	function       reduce using rule 28
	';'            reduce using rule 28
	')'            reduce using rule 28
	'>'            reduce using rule 28
	'>='           reduce using rule 28
	'<'            reduce using rule 28
	'<='           reduce using rule 28
	'<>'           reduce using rule 28
	'='            reduce using rule 28
	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	%eof           reduce using rule 28


State 55

	Expr -> Expr . '<' Expr                             (rule 21)
	Expr -> Expr . '<=' Expr                            (rule 22)
	Expr -> Expr . '>' Expr                             (rule 23)
	Expr -> Expr . '>=' Expr                            (rule 24)
	Expr -> Expr . '=' Expr                             (rule 25)
	Expr -> Expr '=' Expr .                             (rule 25)
	Expr -> Expr . '<>' Expr                            (rule 26)
	Expr -> Expr . '-' Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '*' Expr                             (rule 29)
	Expr -> Expr . '/' Expr                             (rule 30)
	Expr -> Expr . '%' Expr                             (rule 31)

	do             reduce using rule 25
	then           reduce using rule 25
	else           reduce using rule 25
	var            reduce using rule 25
	in             reduce using rule 25
	end            reduce using rule 25
	function       reduce using rule 25
	';'            reduce using rule 25
	')'            reduce using rule 25
	'>'            fail
	'>='           fail
	'<'            fail
	'<='           fail
	'<>'           fail
	'='            fail
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	%eof           reduce using rule 25


State 56

	Expr -> Expr . '<' Expr                             (rule 21)
	Expr -> Expr . '<=' Expr                            (rule 22)
	Expr -> Expr . '>' Expr                             (rule 23)
	Expr -> Expr . '>=' Expr                            (rule 24)
	Expr -> Expr . '=' Expr                             (rule 25)
	Expr -> Expr . '<>' Expr                            (rule 26)
	Expr -> Expr '<>' Expr .                            (rule 26)
	Expr -> Expr . '-' Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '*' Expr                             (rule 29)
	Expr -> Expr . '/' Expr                             (rule 30)
	Expr -> Expr . '%' Expr                             (rule 31)

	do             reduce using rule 26
	then           reduce using rule 26
	else           reduce using rule 26
	var            reduce using rule 26
	in             reduce using rule 26
	end            reduce using rule 26
	function       reduce using rule 26
	';'            reduce using rule 26
	')'            reduce using rule 26
	'>'            fail
	'>='           fail
	'<'            fail
	'<='           fail
	'<>'           fail
	'='            fail
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	%eof           reduce using rule 26


State 57

	Expr -> Expr . '<' Expr                             (rule 21)
	Expr -> Expr . '<=' Expr                            (rule 22)
	Expr -> Expr '<=' Expr .                            (rule 22)
	Expr -> Expr . '>' Expr                             (rule 23)
	Expr -> Expr . '>=' Expr                            (rule 24)
	Expr -> Expr . '=' Expr                             (rule 25)
	Expr -> Expr . '<>' Expr                            (rule 26)
	Expr -> Expr . '-' Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '*' Expr                             (rule 29)
	Expr -> Expr . '/' Expr                             (rule 30)
	Expr -> Expr . '%' Expr                             (rule 31)

	do             reduce using rule 22
	then           reduce using rule 22
	else           reduce using rule 22
	var            reduce using rule 22
	in             reduce using rule 22
	end            reduce using rule 22
	function       reduce using rule 22
	';'            reduce using rule 22
	')'            reduce using rule 22
	'>'            fail
	'>='           fail
	'<'            fail
	'<='           fail
	'<>'           fail
	'='            fail
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	%eof           reduce using rule 22


State 58

	Expr -> Expr . '<' Expr                             (rule 21)
	Expr -> Expr '<' Expr .                             (rule 21)
	Expr -> Expr . '<=' Expr                            (rule 22)
	Expr -> Expr . '>' Expr                             (rule 23)
	Expr -> Expr . '>=' Expr                            (rule 24)
	Expr -> Expr . '=' Expr                             (rule 25)
	Expr -> Expr . '<>' Expr                            (rule 26)
	Expr -> Expr . '-' Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '*' Expr                             (rule 29)
	Expr -> Expr . '/' Expr                             (rule 30)
	Expr -> Expr . '%' Expr                             (rule 31)

	do             reduce using rule 21
	then           reduce using rule 21
	else           reduce using rule 21
	var            reduce using rule 21
	in             reduce using rule 21
	end            reduce using rule 21
	function       reduce using rule 21
	';'            reduce using rule 21
	')'            reduce using rule 21
	'>'            fail
	'>='           fail
	'<'            fail
	'<='           fail
	'<>'           fail
	'='            fail
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	%eof           reduce using rule 21


State 59

	Expr -> Expr . '<' Expr                             (rule 21)
	Expr -> Expr . '<=' Expr                            (rule 22)
	Expr -> Expr . '>' Expr                             (rule 23)
	Expr -> Expr . '>=' Expr                            (rule 24)
	Expr -> Expr '>=' Expr .                            (rule 24)
	Expr -> Expr . '=' Expr                             (rule 25)
	Expr -> Expr . '<>' Expr                            (rule 26)
	Expr -> Expr . '-' Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '*' Expr                             (rule 29)
	Expr -> Expr . '/' Expr                             (rule 30)
	Expr -> Expr . '%' Expr                             (rule 31)

	do             reduce using rule 24
	then           reduce using rule 24
	else           reduce using rule 24
	var            reduce using rule 24
	in             reduce using rule 24
	end            reduce using rule 24
	function       reduce using rule 24
	';'            reduce using rule 24
	')'            reduce using rule 24
	'>'            fail
	'>='           fail
	'<'            fail
	'<='           fail
	'<>'           fail
	'='            fail
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	%eof           reduce using rule 24


State 60

	Expr -> Expr . '<' Expr                             (rule 21)
	Expr -> Expr . '<=' Expr                            (rule 22)
	Expr -> Expr . '>' Expr                             (rule 23)
	Expr -> Expr '>' Expr .                             (rule 23)
	Expr -> Expr . '>=' Expr                            (rule 24)
	Expr -> Expr . '=' Expr                             (rule 25)
	Expr -> Expr . '<>' Expr                            (rule 26)
	Expr -> Expr . '-' Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '*' Expr                             (rule 29)
	Expr -> Expr . '/' Expr                             (rule 30)
	Expr -> Expr . '%' Expr                             (rule 31)

	do             reduce using rule 23
	then           reduce using rule 23
	else           reduce using rule 23
	var            reduce using rule 23
	in             reduce using rule 23
	end            reduce using rule 23
	function       reduce using rule 23
	';'            reduce using rule 23
	')'            reduce using rule 23
	'>'            fail
	'>='           fail
	'<'            fail
	'<='           fail
	'<>'           fail
	'='            fail
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	%eof           reduce using rule 23


State 61

	Expr -> while Expr do . Expr                        (rule 34)

	id             shift, and enter state 10
	num            shift, and enter state 17
	while          shift, and enter state 18
	if             shift, and enter state 19
	scani          shift, and enter state 20
	printi         shift, and enter state 21
	let            shift, and enter state 22

	Var            goto state 15
	Expr           goto state 78

State 62

	Expr -> if Expr then . Expr                         (rule 32)
	Expr -> if Expr then . Expr else Expr               (rule 33)

	id             shift, and enter state 10
	num            shift, and enter state 17
	while          shift, and enter state 18
	if             shift, and enter state 19
	scani          shift, and enter state 20
	printi         shift, and enter state 21
	let            shift, and enter state 22

	Var            goto state 15
	Expr           goto state 77

State 63

	Expr -> scani '(' ')' .                             (rule 37)

	do             reduce using rule 37
	then           reduce using rule 37
	else           reduce using rule 37
	var            reduce using rule 37
	in             reduce using rule 37
	end            reduce using rule 37
	function       reduce using rule 37
	';'            reduce using rule 37
	')'            reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'<>'           reduce using rule 37
	'='            reduce using rule 37
	'+'            reduce using rule 37
	'-'            reduce using rule 37
	'*'            reduce using rule 37
	'/'            reduce using rule 37
	'%'            reduce using rule 37
	%eof           reduce using rule 37


State 64

	Expr -> Expr . '<' Expr                             (rule 21)
	Expr -> Expr . '<=' Expr                            (rule 22)
	Expr -> Expr . '>' Expr                             (rule 23)
	Expr -> Expr . '>=' Expr                            (rule 24)
	Expr -> Expr . '=' Expr                             (rule 25)
	Expr -> Expr . '<>' Expr                            (rule 26)
	Expr -> Expr . '-' Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '*' Expr                             (rule 29)
	Expr -> Expr . '/' Expr                             (rule 30)
	Expr -> Expr . '%' Expr                             (rule 31)
	Expr -> printi '(' Expr . ')'                       (rule 36)

	')'            shift, and enter state 76
	'>'            shift, and enter state 35
	'>='           shift, and enter state 36
	'<'            shift, and enter state 37
	'<='           shift, and enter state 38
	'<>'           shift, and enter state 39
	'='            shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45


State 65

	Var_decl_list -> Var_decl_list Var_decl .           (rule 9)

	var            reduce using rule 9
	in             reduce using rule 9


State 66

	Expr -> let Var_decl_list in . Expr_seq end         (rule 35)

	id             shift, and enter state 10
	num            shift, and enter state 17
	while          shift, and enter state 18
	if             shift, and enter state 19
	scani          shift, and enter state 20
	printi         shift, and enter state 21
	let            shift, and enter state 22

	Expr_seq       goto state 75
	Var            goto state 15
	Expr           goto state 16

State 67

	Type_field -> Var ':' . Type_id                     (rule 13)

	int            shift, and enter state 74

	Type_id        goto state 73

State 68

	Decl -> function Var '(' Type_fields ')' . '=' Expr    (rule 16)
	Decl -> function Var '(' Type_fields ')' . ':' Type_id '=' Expr    (rule 17)

	'='            shift, and enter state 71
	':'            shift, and enter state 72


State 69

	Type_fields -> Type_fields ',' . Type_field         (rule 12)

	id             shift, and enter state 10

	Type_field     goto state 70
	Var            goto state 27

State 70

	Type_fields -> Type_fields ',' Type_field .         (rule 12)

	')'            reduce using rule 12
	','            reduce using rule 12


State 71

	Decl -> function Var '(' Type_fields ')' '=' . Expr    (rule 16)

	id             shift, and enter state 10
	num            shift, and enter state 17
	while          shift, and enter state 18
	if             shift, and enter state 19
	scani          shift, and enter state 20
	printi         shift, and enter state 21
	let            shift, and enter state 22

	Var            goto state 15
	Expr           goto state 82

State 72

	Decl -> function Var '(' Type_fields ')' ':' . Type_id '=' Expr    (rule 17)

	int            shift, and enter state 74

	Type_id        goto state 81

State 73

	Type_field -> Var ':' Type_id .                     (rule 13)

	')'            reduce using rule 13
	','            reduce using rule 13


State 74

	Type_id -> int .                                    (rule 6)

	')'            reduce using rule 6
	','            reduce using rule 6
	'='            reduce using rule 6


State 75

	Expr_seq -> Expr_seq . ';' Expr                     (rule 5)
	Expr -> let Var_decl_list in Expr_seq . end         (rule 35)

	end            shift, and enter state 80
	';'            shift, and enter state 47


State 76

	Expr -> printi '(' Expr ')' .                       (rule 36)

	do             reduce using rule 36
	then           reduce using rule 36
	else           reduce using rule 36
	var            reduce using rule 36
	in             reduce using rule 36
	end            reduce using rule 36
	function       reduce using rule 36
	';'            reduce using rule 36
	')'            reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'<>'           reduce using rule 36
	'='            reduce using rule 36
	'+'            reduce using rule 36
	'-'            reduce using rule 36
	'*'            reduce using rule 36
	'/'            reduce using rule 36
	'%'            reduce using rule 36
	%eof           reduce using rule 36


State 77

	Expr -> Expr . '<' Expr                             (rule 21)
	Expr -> Expr . '<=' Expr                            (rule 22)
	Expr -> Expr . '>' Expr                             (rule 23)
	Expr -> Expr . '>=' Expr                            (rule 24)
	Expr -> Expr . '=' Expr                             (rule 25)
	Expr -> Expr . '<>' Expr                            (rule 26)
	Expr -> Expr . '-' Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '*' Expr                             (rule 29)
	Expr -> Expr . '/' Expr                             (rule 30)
	Expr -> Expr . '%' Expr                             (rule 31)
	Expr -> if Expr then Expr .                         (rule 32)
	Expr -> if Expr then Expr . else Expr               (rule 33)

	do             reduce using rule 32
	then           reduce using rule 32
	else           shift, and enter state 79
			(reduce using rule 32)

	var            reduce using rule 32
	in             reduce using rule 32
	end            reduce using rule 32
	function       reduce using rule 32
	';'            reduce using rule 32
	')'            reduce using rule 32
	'>'            shift, and enter state 35
			(reduce using rule 32)

	'>='           shift, and enter state 36
			(reduce using rule 32)

	'<'            shift, and enter state 37
			(reduce using rule 32)

	'<='           shift, and enter state 38
			(reduce using rule 32)

	'<>'           shift, and enter state 39
			(reduce using rule 32)

	'='            shift, and enter state 40
			(reduce using rule 32)

	'+'            shift, and enter state 41
			(reduce using rule 32)

	'-'            shift, and enter state 42
			(reduce using rule 32)

	'*'            shift, and enter state 43
			(reduce using rule 32)

	'/'            shift, and enter state 44
			(reduce using rule 32)

	'%'            shift, and enter state 45
			(reduce using rule 32)

	%eof           reduce using rule 32


State 78

	Expr -> Expr . '<' Expr                             (rule 21)
	Expr -> Expr . '<=' Expr                            (rule 22)
	Expr -> Expr . '>' Expr                             (rule 23)
	Expr -> Expr . '>=' Expr                            (rule 24)
	Expr -> Expr . '=' Expr                             (rule 25)
	Expr -> Expr . '<>' Expr                            (rule 26)
	Expr -> Expr . '-' Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '*' Expr                             (rule 29)
	Expr -> Expr . '/' Expr                             (rule 30)
	Expr -> Expr . '%' Expr                             (rule 31)
	Expr -> while Expr do Expr .                        (rule 34)

	do             reduce using rule 34
	then           reduce using rule 34
	else           reduce using rule 34
	var            reduce using rule 34
	in             reduce using rule 34
	end            reduce using rule 34
	function       reduce using rule 34
	';'            reduce using rule 34
	')'            reduce using rule 34
	'>'            shift, and enter state 35
			(reduce using rule 34)

	'>='           shift, and enter state 36
			(reduce using rule 34)

	'<'            shift, and enter state 37
			(reduce using rule 34)

	'<='           shift, and enter state 38
			(reduce using rule 34)

	'<>'           shift, and enter state 39
			(reduce using rule 34)

	'='            shift, and enter state 40
			(reduce using rule 34)

	'+'            shift, and enter state 41
			(reduce using rule 34)

	'-'            shift, and enter state 42
			(reduce using rule 34)

	'*'            shift, and enter state 43
			(reduce using rule 34)

	'/'            shift, and enter state 44
			(reduce using rule 34)

	'%'            shift, and enter state 45
			(reduce using rule 34)

	%eof           reduce using rule 34


State 79

	Expr -> if Expr then Expr else . Expr               (rule 33)

	id             shift, and enter state 10
	num            shift, and enter state 17
	while          shift, and enter state 18
	if             shift, and enter state 19
	scani          shift, and enter state 20
	printi         shift, and enter state 21
	let            shift, and enter state 22

	Var            goto state 15
	Expr           goto state 84

State 80

	Expr -> let Var_decl_list in Expr_seq end .         (rule 35)

	do             reduce using rule 35
	then           reduce using rule 35
	else           reduce using rule 35
	var            reduce using rule 35
	in             reduce using rule 35
	end            reduce using rule 35
	function       reduce using rule 35
	';'            reduce using rule 35
	')'            reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	'<'            reduce using rule 35
	'<='           reduce using rule 35
	'<>'           reduce using rule 35
	'='            reduce using rule 35
	'+'            reduce using rule 35
	'-'            reduce using rule 35
	'*'            reduce using rule 35
	'/'            reduce using rule 35
	'%'            reduce using rule 35
	%eof           reduce using rule 35


State 81

	Decl -> function Var '(' Type_fields ')' ':' Type_id . '=' Expr    (rule 17)

	'='            shift, and enter state 83


State 82

	Decl -> function Var '(' Type_fields ')' '=' Expr .    (rule 16)
	Expr -> Expr . '<' Expr                             (rule 21)
	Expr -> Expr . '<=' Expr                            (rule 22)
	Expr -> Expr . '>' Expr                             (rule 23)
	Expr -> Expr . '>=' Expr                            (rule 24)
	Expr -> Expr . '=' Expr                             (rule 25)
	Expr -> Expr . '<>' Expr                            (rule 26)
	Expr -> Expr . '-' Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '*' Expr                             (rule 29)
	Expr -> Expr . '/' Expr                             (rule 30)
	Expr -> Expr . '%' Expr                             (rule 31)

	var            reduce using rule 16
	in             reduce using rule 16
	function       reduce using rule 16
	'>'            shift, and enter state 35
	'>='           shift, and enter state 36
	'<'            shift, and enter state 37
	'<='           shift, and enter state 38
	'<>'           shift, and enter state 39
	'='            shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45


State 83

	Decl -> function Var '(' Type_fields ')' ':' Type_id '=' . Expr    (rule 17)

	id             shift, and enter state 10
	num            shift, and enter state 17
	while          shift, and enter state 18
	if             shift, and enter state 19
	scani          shift, and enter state 20
	printi         shift, and enter state 21
	let            shift, and enter state 22

	Var            goto state 15
	Expr           goto state 85

State 84

	Expr -> Expr . '<' Expr                             (rule 21)
	Expr -> Expr . '<=' Expr                            (rule 22)
	Expr -> Expr . '>' Expr                             (rule 23)
	Expr -> Expr . '>=' Expr                            (rule 24)
	Expr -> Expr . '=' Expr                             (rule 25)
	Expr -> Expr . '<>' Expr                            (rule 26)
	Expr -> Expr . '-' Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '*' Expr                             (rule 29)
	Expr -> Expr . '/' Expr                             (rule 30)
	Expr -> Expr . '%' Expr                             (rule 31)
	Expr -> if Expr then Expr else Expr .               (rule 33)

	do             reduce using rule 33
	then           reduce using rule 33
	else           reduce using rule 33
	var            reduce using rule 33
	in             reduce using rule 33
	end            reduce using rule 33
	function       reduce using rule 33
	';'            reduce using rule 33
	')'            reduce using rule 33
	'>'            shift, and enter state 35
			(reduce using rule 33)

	'>='           shift, and enter state 36
			(reduce using rule 33)

	'<'            shift, and enter state 37
			(reduce using rule 33)

	'<='           shift, and enter state 38
			(reduce using rule 33)

	'<>'           shift, and enter state 39
			(reduce using rule 33)

	'='            shift, and enter state 40
			(reduce using rule 33)

	'+'            shift, and enter state 41
			(reduce using rule 33)

	'-'            shift, and enter state 42
			(reduce using rule 33)

	'*'            shift, and enter state 43
			(reduce using rule 33)

	'/'            shift, and enter state 44
			(reduce using rule 33)

	'%'            shift, and enter state 45
			(reduce using rule 33)

	%eof           reduce using rule 33


State 85

	Decl -> function Var '(' Type_fields ')' ':' Type_id '=' Expr .    (rule 17)
	Expr -> Expr . '<' Expr                             (rule 21)
	Expr -> Expr . '<=' Expr                            (rule 22)
	Expr -> Expr . '>' Expr                             (rule 23)
	Expr -> Expr . '>=' Expr                            (rule 24)
	Expr -> Expr . '=' Expr                             (rule 25)
	Expr -> Expr . '<>' Expr                            (rule 26)
	Expr -> Expr . '-' Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '*' Expr                             (rule 29)
	Expr -> Expr . '/' Expr                             (rule 30)
	Expr -> Expr . '%' Expr                             (rule 31)

	var            reduce using rule 17
	in             reduce using rule 17
	function       reduce using rule 17
	'>'            shift, and enter state 35
	'>='           shift, and enter state 36
	'<'            shift, and enter state 37
	'<='           shift, and enter state 38
	'<>'           shift, and enter state 39
	'='            shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 38
Number of terminals: 32
Number of non-terminals: 12
Number of states: 86
